@implements IDisposable
@using Microsoft.Extensions.Logging
@inject IJSRuntime js
@inject ILogger<Carousel> logger
<div class="carousel slide" data-ride="carousel" id="@carouselId" @ref="carouselReference">
  <div class="carousel-inner">
    @for (int i = 1; i <= 10; i++)
    {
      <div class="carousel-item @(i == 1 ? "active": "")">
        <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400"
        xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img"
        aria-label="Slide @i">
          <title>Slide @i</title>
          <rect width="100%" height="100%" fill="#777"></rect><text x="50%" y="50%" fill="#fff" dy=".3em">Slide @i</text>
        </svg>
      </div>
    }
  </div>
  <a class="carousel-control-prev" data-target="#@carouselId" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" data-target="#@carouselId" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

@code{
  // prefix id with 'id_' to make sure id's don't start with a number or other invalid character
  // add Guid to ensure unique-ness but remove '-' as they are invalid characters for JS property names
  private string carouselId = $"id_{Guid.NewGuid().ToString().Replace("-", "")}";
  private ElementReference carouselReference;
  private DotNetObjectReference<Carousel> dotNetObjectReference;

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      dotNetObjectReference = DotNetObjectReference.Create(this);
      await js.InvokeVoidAsync("blazorCarousel.init", carouselId, dotNetObjectReference, carouselReference);
    }
  }

  [JSInvokable]
  public void OnSlide(string direction, int from, int to)
  {
    logger.LogInformation($"Carousel is sliding from {from} to {to}.");
  }

  [JSInvokable]
  public void OnSlid(string direction, int from, int to)
  {
    logger.LogInformation($"Carousel slid from {from} to {to}.");
  }

  public void Dispose()
  {
    // IAsyncDisposable not supported yet in .NET Core 3.1
    Task.Run(() => js.InvokeVoidAsync("blazorCarousel.dispose", carouselId));
    dotNetObjectReference.Dispose();
  }
}