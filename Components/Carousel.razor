@implements IDisposable
@inject IJSRuntime jsRuntime
<div class="carousel slide" data-ride="carousel" id="@carouselId" @ref="carouselReference">
  <div class="carousel-inner">
    <div class="carousel-item">
      <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400"
      xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img"
      aria-label="Placeholder: First slide">
        <title>Placeholder</title>
        <rect width="100%" height="100%" fill="#777"></rect><text x="50%" y="50%" fill="#555" dy=".3em">First
          slide</text>
      </svg>
    </div>
    <div class="carousel-item">
      <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400"
      xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img"
      aria-label="Placeholder: Second slide">
        <title>Placeholder</title>
        <rect width="100%" height="100%" fill="#666"></rect><text x="50%" y="50%" fill="#444" dy=".3em">Second
          slide</text>
      </svg>
    </div>
    <div class="carousel-item active">
      <svg class="bd-placeholder-img bd-placeholder-img-lg d-block w-100" width="800" height="400"
      xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img"
      aria-label="Placeholder: Third slide">
        <title>Placeholder</title>
        <rect width="100%" height="100%" fill="#555"></rect><text x="50%" y="50%" fill="#333" dy=".3em">Third
          slide</text>
      </svg>
    </div>
  </div>
  <a class="carousel-control-prev" data-target="#@carouselId" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" data-target="#@carouselId" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

@code{
  // required to hook up controls using data-target
  private string carouselId = Guid.NewGuid().ToString();
  private ElementReference carouselReference;
  private DotNetObjectReference<Carousel> dotNetObjectReference;
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if(firstRender){
      dotNetObjectReference = DotNetObjectReference.Create(this);
      await jsRuntime.InvokeVoidAsync("blazorCarousel.init", carouselId, dotNetObjectReference, carouselReference);
    }
  }

  public void Dispose()
  {
    // IAsyncDisposable not supported yet
    Task.Run(() => jsRuntime.InvokeVoidAsync("blazorCarousel.dispose", carouselId)); 
    dotNetObjectReference.Dispose();
  }
}