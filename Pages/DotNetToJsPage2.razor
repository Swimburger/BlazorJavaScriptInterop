@page "/dotnet-to-js-sample-2"
@using BlazorJavaScriptInterop.Components
<h1>Call JavaScript functions with a .NET object as parameter from .NET</h1>
<p>
    In addition to simple .NET types, you can also pass .NET objects when invoking JavaScript functions using <code>InvokeVoidAsync</code>.
</p>

<p class="font-weight-bold">Sample:</p>

<DotNetToJsSample2 />

<br><br>

<p class="font-weight-bold">JavaScript Source:</p>
<pre style="color:#000000;background:#ffffff;">window.dotNetToJsSamples = {
    printDotNetObject: function(node, objectFromDotNet)
    {
        node.textContent = JSON.stringify(objectFromDotNet);
    }
};
</pre>

<p class="font-weight-bold">Blazor Source:</p>
<pre style="color:#000000;background:#ffffff;">@@inject IJSRuntime jsRuntime
<span style="color:#7f0055; ">&lt;</span><span style="color:#7f0055; font-weight:bold; ">button</span> type=<span style="color:#2a00ff; ">"button"</span> class=<span style="color:#2a00ff; ">"btn btn-primary"</span> @@onclick=<span style="color:#2a00ff; ">"PrintDotNetObject"</span><span style="color:#7f0055; ">&gt;</span>Pass .NET object to JavaScript<span style="color:#7f0055; ">&lt;/</span><span style="color:#7f0055; font-weight:bold; ">button</span><span style="color:#7f0055; ">&gt;</span>
<span style="color:#7f0055; ">&lt;</span><span style="color:#7f0055; font-weight:bold; ">br</span><span style="color:#7f0055; ">&gt;</span><span style="color:#7f0055; ">&lt;</span><span style="color:#7f0055; font-weight:bold; ">br</span><span style="color:#7f0055; ">&gt;</span>
<span style="color:#7f0055; ">&lt;</span><span style="color:#7f0055; font-weight:bold; ">code</span> @@ref=<span style="color:#2a00ff; ">"codeBlock"</span><span style="color:#7f0055; ">&gt;</span><span style="color:#7f0055; ">&lt;/</span><span style="color:#7f0055; font-weight:bold; ">code</span><span style="color:#7f0055; ">&gt;</span>
@@code{
  <span style="color:#7f0055; font-weight:bold; ">private</span> ElementReference codeBlock;

  <span style="color:#7f0055; font-weight:bold; ">private</span> async Task PrintDotNetObject()
  {
    <span style="color:#7f0055; font-weight:bold; ">var</span> obj = <span style="color:#7f0055; font-weight:bold; ">new</span> {
      FistName = <span style="color:#2a00ff; ">"</span><span style="color:#2a00ff; ">Jon</span><span style="color:#2a00ff; ">"</span>,
      LastName = <span style="color:#2a00ff; ">"</span><span style="color:#2a00ff; ">Doe</span><span style="color:#2a00ff; ">"</span>,
      Age = 27,
      BirthDate = DateTime.Now.AddYears(-27), 
      LikesDotNet = <span style="color:#7f0055; font-weight:bold; ">true</span>,
    };
    await jsRuntime.InvokeVoidAsync(<span style="color:#2a00ff; ">"</span><span style="color:#2a00ff; ">dotNetToJsSamples.printDotNetObject</span><span style="color:#2a00ff; ">"</span>, codeBlock, obj);
  }
}
</pre>